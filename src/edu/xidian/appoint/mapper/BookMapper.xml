<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.xidian.appoint.mapper.BookMapper" >
  <resultMap id="BaseResultMap" type="edu.xidian.appoint.model.Book" >
    <id column="book_id" property="bookId" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="introd" property="introd" jdbcType="VARCHAR" />
    <result column="number" property="number" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    book_id, name, introd, number
  </sql>
  <!--1.查询所有-->
  <select id="findAllBooks" parameterType="edu.xidian.appoint.model.Book" resultType="book">
    SELECT book_id,name,introd,number FROM book
  </select>
  <!--2.查询一些：模糊查询-->
  <select id="findSomeBooks" parameterType="edu.xidian.appoint.model.Book" resultType="book">
    SELECT book_id,name,introd,number FROM book where name like '%' #{name} '%'
  </select>
  <!--3.按主键减少-->
  <update id="reduceNumberBybookId">
    UPDATE book
    SET number = number - 1
    WHERE
    book_id = #{bookId}
    AND number > 0
  </update>
  <!--4.按主键增加-->
  <update id="addNumberBybookId">
    UPDATE book
    SET number = number + 1
    WHERE
    book_id = #{bookId}
    AND number > 0
  </update>

  <!--5.按主键查询-->
  <select id="selectByPrimaryKey"  parameterType="java.lang.Long" resultType="edu.xidian.appoint.model.Book" >
    select * from book where book_id = #{bookId}
  </select>
  <!--6.按主键删除-->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from book  where book_id = #{bookId,jdbcType=BIGINT}
  </delete>
  <!--7.按书对象插入-->
  <insert id="insertByBook" parameterType="edu.xidian.appoint.model.Book" >
    insert into book (book_id, name, introd, 
      number)
    values (#{bookId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{introd,jdbcType=VARCHAR}, 
      #{number,jdbcType=INTEGER})
  </insert>
  <!--8.按主键更新，校验-->
  <update id="updateByPrimaryKeySelective" parameterType="edu.xidian.appoint.model.Book" >
    update book
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="introd != null" >
        introd = #{introd,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
    </set>
    where book_id = #{bookId,jdbcType=BIGINT}
  </update>
</mapper>