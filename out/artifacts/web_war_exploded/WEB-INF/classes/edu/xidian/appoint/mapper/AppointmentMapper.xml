<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.xidian.appoint.mapper.AppointmentMapper" >
  <!--执行数据库语句的返回数据类型-->
  <resultMap id="BaseResultMap" type="edu.xidian.appoint.model.Appointment" >
    <id column="book_id" property="bookId" jdbcType="BIGINT" />
    <id column="student_id" property="studentId" jdbcType="BIGINT" />
    <result column="appoint_time" property="appointTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <!--数据库字段列表-->
  <sql id="Base_Column_List" >
    book_id, student_id, appoint_time
  </sql>
  <!--1.按主键插入-->
  <insert id="insertByAppoint" parameterType="edu.xidian.appoint.model.Appointment" >
    insert into appointment (book_id, student_id, appoint_time)
    values (#{bookId,jdbcType=BIGINT}, #{studentId,jdbcType=BIGINT}, #{appointTime,jdbcType=TIMESTAMP})
  </insert>
  <!--2.按book_id删除-->
  <delete id="deleteBybookId" parameterType="edu.xidian.appoint.model.Appointment" >
    delete from appointment
    where book_id = #{bookId,jdbcType=BIGINT}
  </delete>
  <!--3.按主键查询-->
  <select id="selectByBookIdAndStudentId" resultMap="BaseResultMap" parameterType="edu.xidian.appoint.model.Appointment" >
    select
    <include refid="Base_Column_List" />
    from appointment
    where book_id = #{bookId,jdbcType=BIGINT}
    and student_id = #{studentId,jdbcType=BIGINT}
  </select>
  <!--4.按BookId查询-->
  <select id="selectByBookId" parameterType="edu.xidian.appoint.model.Appointment" resultMap="BaseResultMap" >
    select <include refid="Base_Column_List" /> from appointment where book_id = #{bookId,jdbcType=BIGINT}
  </select>
  <!--5.按StudentId查询-->
  <select id="selectByStudentId" parameterType="edu.xidian.appoint.model.Appointment" resultMap="BaseResultMap" >
    select book_id,student_id,appoint_time from appointment where student_id = #{studentId,jdbcType=BIGINT}
  </select>
  <!--6.查询某个学生的所有预约记录 -->
  <select id="findAllByStudentId"  resultMap="BaseResultMap" parameterType="edu.xidian.appoint.model.Appointment">
    <!-- 如何告诉MyBatis把结果映射到Appointment同时映射book属性 -->
    <!-- 可以自由控制SQL -->
    SELECT
    a.book_id,
    a.student_id,
    a.appoint_time,
    b.book_id "book.book_id",
    b.`name` "book.name",
    b.introd "book.introd",
    b.number "book.number"
    FROM
    appointment a
    INNER JOIN book b ON a.book_id = b.book_id
    WHERE    a.student_id = #{studentId}
  </select>
</mapper>